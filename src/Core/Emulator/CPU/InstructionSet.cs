using GBMU.Core;

namespace GBMU;

public static class InstructionSet
{
	public static CPUOperator GetInstruction(byte opcode) => opcode switch
	{
		0x00 => new OperatorNOP(),
		0x01 => new OperatorLD(new DataTypeU16(), new DataTypeReg16(CPURegister.BC)),
		0x02 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg16Address(CPURegister.BC)),
		0x03 => new OperatorINC(new DataTypeReg16(CPURegister.BC), new FlagPermissionHandler("----")),
		0x04 => new OperatorINC(new DataTypeReg8(CPURegister.B), new FlagPermissionHandler("Z0H-")),
		0x05 => new OperatorDEC(new DataTypeReg8(CPURegister.B), new FlagPermissionHandler("Z1H-")),
		0x06 => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.B)),
		0x07 => new OperatorRLCA(),
		0x08 => new OperatorLD(new DataTypeReg16(CPURegister.SP), new DataTypeU16AddressWord()),
		0x09 => new OperatorADD(new DataTypeReg16(CPURegister.BC), new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("-0HC"), CarryBit.BIT_16, HalfCarryBit.BIT_12),
		0x0A => new OperatorLD(new DataTypeReg16Address(CPURegister.BC), new DataTypeReg8(CPURegister.A)),
		0x0B => new OperatorDEC(new DataTypeReg16(CPURegister.BC), new FlagPermissionHandler("----")),
		0x0C => new OperatorINC(new DataTypeReg8(CPURegister.C), new FlagPermissionHandler("Z0H-")),
		0x0D => new OperatorDEC(new DataTypeReg8(CPURegister.C), new FlagPermissionHandler("Z1H-")),
		0x0E => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.C)),
		0x0F => new OperatorRRCA(),

		// 0x10 => new OperatorSTOP(),
		0x11 => new OperatorLD(new DataTypeU16(), new DataTypeReg16(CPURegister.DE)),
		0x12 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg16Address(CPURegister.DE)),
		0x13 => new OperatorINC(new DataTypeReg16(CPURegister.DE), new FlagPermissionHandler("----")),
		0x14 => new OperatorINC(new DataTypeReg8(CPURegister.D), new FlagPermissionHandler("Z0H-")),
		0x15 => new OperatorDEC(new DataTypeReg8(CPURegister.D), new FlagPermissionHandler("Z1H-")),
		0x16 => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.D)),
		0x17 => new OperatorRLA(),
		0x18 => new OperatorJR(new DataTypeU8()),
		0x19 => new OperatorADD(new DataTypeReg16(CPURegister.DE), new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("-0HC"), CarryBit.BIT_16, HalfCarryBit.BIT_12),
		0x1A => new OperatorLD(new DataTypeReg16Address(CPURegister.DE), new DataTypeReg8(CPURegister.A)),
		0x1B => new OperatorDEC(new DataTypeReg16(CPURegister.DE), new FlagPermissionHandler("----")),
		0x1C => new OperatorINC(new DataTypeReg8(CPURegister.E), new FlagPermissionHandler("Z0H-")),
		0x1D => new OperatorDEC(new DataTypeReg8(CPURegister.E), new FlagPermissionHandler("Z1H-")),
		0x1E => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.E)),
		0x1F => new OperatorRRA(),

		0x20 => new OperatorJRFlag(CPUFlag.ZERO, false, new DataTypeU8()),
		0x21 => new OperatorLD(new DataTypeU16(), new DataTypeReg16(CPURegister.HL)),
		0x22 => new OperatorLDShift(new DataTypeReg8(CPURegister.A), new DataTypeReg16Address(CPURegister.HL), CPURegister.HL, ShiftingBehaviour.INCREMENT),
		0x23 => new OperatorINC(new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("----")),
		0x24 => new OperatorINC(new DataTypeReg8(CPURegister.H), new FlagPermissionHandler("Z0H-")),
		0x25 => new OperatorDEC(new DataTypeReg8(CPURegister.H), new FlagPermissionHandler("Z1H-")),
		0x26 => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.H)),
		0x27 => new OperatorDAA(),
		0x28 => new OperatorJRFlag(CPUFlag.ZERO, true, new DataTypeU8()),
		0x29 => new OperatorADD(new DataTypeReg16(CPURegister.HL), new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("-0HC"), CarryBit.BIT_16, HalfCarryBit.BIT_12),
		0x2A => new OperatorLDShift(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), CPURegister.HL, ShiftingBehaviour.INCREMENT),
		0x2B => new OperatorDEC(new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("----")),
		0x2C => new OperatorINC(new DataTypeReg8(CPURegister.L), new FlagPermissionHandler("Z0H-")),
		0x2D => new OperatorDEC(new DataTypeReg8(CPURegister.L), new FlagPermissionHandler("Z1H-")),
		0x2E => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.L)),
		0x2F => new OperatorCPL(),

		0x30 => new OperatorJRFlag(CPUFlag.CARRY, false, new DataTypeU8()),
		0x31 => new OperatorLD(new DataTypeU16(), new DataTypeReg16(CPURegister.SP)),
		0x32 => new OperatorLDShift(new DataTypeReg8(CPURegister.A), new DataTypeReg16Address(CPURegister.HL), CPURegister.HL, ShiftingBehaviour.DECREMENT),
		0x33 => new OperatorINC(new DataTypeReg16(CPURegister.SP), new FlagPermissionHandler("----")),
		0x34 => new OperatorINC(new DataTypeReg16Address(CPURegister.HL), new FlagPermissionHandler("Z0H-")),
		0x35 => new OperatorDEC(new DataTypeReg16Address(CPURegister.HL), new FlagPermissionHandler("Z1H-")),
		0x36 => new OperatorLD(new DataTypeU8(), new DataTypeReg16Address(CPURegister.HL)),
		0x37 => new OperatorSCF(),
		0x38 => new OperatorJRFlag(CPUFlag.CARRY, true, new DataTypeU8()),
		0x39 => new OperatorADD(new DataTypeReg16(CPURegister.SP), new DataTypeReg16(CPURegister.HL), new FlagPermissionHandler("-0HC"), CarryBit.BIT_16, HalfCarryBit.BIT_12),
		0x3A => new OperatorLDShift(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), CPURegister.HL, ShiftingBehaviour.DECREMENT),
		0x3B => new OperatorDEC(new DataTypeReg16(CPURegister.SP), new FlagPermissionHandler("----")),
		0x3C => new OperatorINC(new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0H-")),
		0x3D => new OperatorDEC(new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1H-")),
		0x3E => new OperatorLD(new DataTypeU8(), new DataTypeReg8(CPURegister.A)),
		0x3F => new OperatorCCF(),

		0x40 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.B)),
		0x41 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.B)),
		0x42 => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.B)),
		0x43 => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.B)),
		0x44 => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.B)),
		0x45 => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.B)),
		0x46 => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.B)),
		0x47 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.B)),
		0x48 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.C)),
		0x49 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.C)),
		0x4A => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.C)),
		0x4B => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.C)),
		0x4C => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.C)),
		0x4D => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.C)),
		0x4E => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.C)),
		0x4F => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.C)),

		0x50 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.D)),
		0x51 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.D)),
		0x52 => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.D)),
		0x53 => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.D)),
		0x54 => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.D)),
		0x55 => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.D)),
		0x56 => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.D)),
		0x57 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.D)),
		0x58 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.E)),
		0x59 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.E)),
		0x5A => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.E)),
		0x5B => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.E)),
		0x5C => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.E)),
		0x5D => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.E)),
		0x5E => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.E)),
		0x5F => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.E)),

		0x60 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.H)),
		0x61 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.H)),
		0x62 => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.H)),
		0x63 => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.H)),
		0x64 => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.H)),
		0x65 => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.H)),
		0x66 => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.H)),
		0x67 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.H)),
		0x68 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.L)),
		0x69 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.L)),
		0x6A => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.L)),
		0x6B => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.L)),
		0x6C => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.L)),
		0x6D => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.L)),
		0x6E => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.L)),
		0x6F => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.L)),

		0x70 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg16Address(CPURegister.HL)),
		0x71 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg16Address(CPURegister.HL)),
		0x72 => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg16Address(CPURegister.HL)),
		0x73 => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg16Address(CPURegister.HL)),
		0x74 => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg16Address(CPURegister.HL)),
		0x75 => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg16Address(CPURegister.HL)),
		// 0x76 => new OperatorHalt(),
		0x77 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg16Address(CPURegister.HL)),
		0x78 => new OperatorLD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A)),
		0x79 => new OperatorLD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A)),
		0x7A => new OperatorLD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A)),
		0x7B => new OperatorLD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A)),
		0x7C => new OperatorLD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A)),
		0x7D => new OperatorLD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A)),
		0x7E => new OperatorLD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A)),
		0x7F => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A)),

		0x80 => new OperatorADD(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x81 => new OperatorADD(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x82 => new OperatorADD(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x83 => new OperatorADD(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x84 => new OperatorADD(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x85 => new OperatorADD(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x86 => new OperatorADD(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x87 => new OperatorADD(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x88 => new OperatorADC(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x89 => new OperatorADC(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8A => new OperatorADC(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8B => new OperatorADC(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8C => new OperatorADC(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8D => new OperatorADC(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8E => new OperatorADC(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x8F => new OperatorADC(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),

		0x90 => new OperatorSUB(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x91 => new OperatorSUB(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x92 => new OperatorSUB(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x93 => new OperatorSUB(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x94 => new OperatorSUB(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x95 => new OperatorSUB(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x96 => new OperatorSUB(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x97 => new OperatorSUB(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x98 => new OperatorSBC(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x99 => new OperatorSBC(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9A => new OperatorSBC(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9B => new OperatorSBC(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9C => new OperatorSBC(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9D => new OperatorSBC(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9E => new OperatorSBC(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0x9F => new OperatorSBC(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),

		0xA0 => new OperatorAND(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA1 => new OperatorAND(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA2 => new OperatorAND(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA3 => new OperatorAND(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA4 => new OperatorAND(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA5 => new OperatorAND(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA6 => new OperatorAND(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA7 => new OperatorAND(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xA8 => new OperatorXOR(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xA9 => new OperatorXOR(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAA => new OperatorXOR(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAB => new OperatorXOR(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAC => new OperatorXOR(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAD => new OperatorXOR(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAE => new OperatorXOR(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xAF => new OperatorXOR(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),

		0xB0 => new OperatorOR(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB1 => new OperatorOR(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB2 => new OperatorOR(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB3 => new OperatorOR(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB4 => new OperatorOR(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB5 => new OperatorOR(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB6 => new OperatorOR(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB7 => new OperatorOR(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xB8 => new OperatorCP(new DataTypeReg8(CPURegister.B), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xB9 => new OperatorCP(new DataTypeReg8(CPURegister.C), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBA => new OperatorCP(new DataTypeReg8(CPURegister.D), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBB => new OperatorCP(new DataTypeReg8(CPURegister.E), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBC => new OperatorCP(new DataTypeReg8(CPURegister.H), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBD => new OperatorCP(new DataTypeReg8(CPURegister.L), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBE => new OperatorCP(new DataTypeReg16Address(CPURegister.HL), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xBF => new OperatorCP(new DataTypeReg8(CPURegister.A), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),

		0xC0 => new OperatorRETFlag(CPUFlag.ZERO, false),
		0xC1 => new OperatorPOP(new DataTypeReg16(CPURegister.BC)),
		0xC2 => new OperatorJPFlag(CPUFlag.ZERO, false, new DataTypeU16()),
		0xC3 => new OperatorJP(new DataTypeU16()),
		0xC4 => new OperatorCALLFlag(CPUFlag.ZERO, false, new DataTypeU16()),
		0xC5 => new OperatorPUSH(new DataTypeReg16(CPURegister.BC)),
		0xC6 => new OperatorADD(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0xC7 => new OperatorRST(0x00),
		0xC8 => new OperatorRETFlag(CPUFlag.ZERO, true),
		0xC9 => new OperatorRET(),
		0xCA => new OperatorJPFlag(CPUFlag.ZERO, true, new DataTypeU16()),
		0xCC => new OperatorCALLFlag(CPUFlag.ZERO, true, new DataTypeU16()),
		0xCD => new OperatorCALL(new DataTypeU16()),
		0xCE => new OperatorADC(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z0HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0xCF => new OperatorRST(0x08),

		0xD0 => new OperatorRETFlag(CPUFlag.CARRY, false),
		0xD1 => new OperatorPOP(new DataTypeReg16(CPURegister.DE)),
		0xD2 => new OperatorJPFlag(CPUFlag.CARRY, false, new DataTypeU16()),
		0xD4 => new OperatorCALLFlag(CPUFlag.CARRY, false, new DataTypeU16()),
		0xD5 => new OperatorPUSH(new DataTypeReg16(CPURegister.DE)),
		0xD6 => new OperatorSUB(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0xD7 => new OperatorRST(0x10),
		0xD8 => new OperatorRETFlag(CPUFlag.CARRY, true),
		// 0xD9 => new OperatorRETI(),
		0xDA => new OperatorJPFlag(CPUFlag.CARRY, true, new DataTypeU16()),
		0xDC => new OperatorCALLFlag(CPUFlag.CARRY, true, new DataTypeU16()),
		0xDE => new OperatorSBC(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC"), CarryBit.BIT_8, HalfCarryBit.BIT_4),
		0xDF => new OperatorRST(0x18),

		0xE0 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeU8Address()),
		0xE1 => new OperatorPOP(new DataTypeReg16(CPURegister.HL)),
		0xE2 => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeReg8Address(CPURegister.C)),
		0xE5 => new OperatorPUSH(new DataTypeReg16(CPURegister.HL)),
		0xE6 => new OperatorAND(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z010")),
		0xE7 => new OperatorRST(0x20),
		0xE8 => new OperatorADD(new DataTypeU8(), new DataTypeReg16(CPURegister.SP), new FlagPermissionHandler("00HC"), CarryBit.BIT_16, HalfCarryBit.BIT_12, true),
		0xE9 => new OperatorJP(new DataTypeReg16Address(CPURegister.HL)),
		0xEA => new OperatorLD(new DataTypeReg8(CPURegister.A), new DataTypeU16Address()),
		0xEE => new OperatorXOR(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xEF => new OperatorRST(0x28),

		0xF0 => new OperatorLD(new DataTypeU8Address(), new DataTypeReg8(CPURegister.A)),
		0xF1 => new OperatorPOP(new DataTypeReg16(CPURegister.AF)),
		0xF2 => new OperatorLD(new DataTypeReg8Address(CPURegister.C), new DataTypeReg8(CPURegister.A)),
		0xF5 => new OperatorPUSH(new DataTypeReg16(CPURegister.AF)),
		0xF6 => new OperatorOR(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z000")),
		0xF7 => new OperatorRST(0x30),
		0xF9 => new OperatorLD(new DataTypeReg16(CPURegister.HL), new DataTypeReg16(CPURegister.SP)),
		0xFA => new OperatorLD(new DataTypeU16Address(), new DataTypeReg8(CPURegister.A)),
		0xFE => new OperatorCP(new DataTypeU8(), new DataTypeReg8(CPURegister.A), new FlagPermissionHandler("Z1HC")),
		0xFF => new OperatorRST(0x38),

		_ => throw new System.Exception("Invalid opcode")
	};
}